@startuml
title Quản lý giỏ hàng

actor Student
entity View
entity Controller
entity Service
entity Model
database Database

Student -> View : displayCartPage()
View -> Controller : requestCartItems(studentId)
Controller -> Service : getCartItems(studentId)
Service -> Model : fetchCartItems(studentId)
Model -> Database : queryCartItems(studentId)
Database --> Model : returnCartItems(cartItems)
Model --> Service : returnCartItems(cartItems)
Service --> Controller : returnCartItems(cartItems)
Controller --> View : showCartItems(cartItems)
View --> Student : displayCartItems(cartItems)

alt Add to Cart
    Student -> View : addCourseToCart(courseId)
    View -> Controller : addCourseToCart(courseId, studentId)
    Controller -> Service : addCourseToCart(courseId, studentId)
    Service -> Model : addCourseToCart(courseId, studentId)
    Model -> Database : insertCartItem(courseId, studentId)
    Database --> Model : returnInsertStatus(success/failure)
    Model --> Service : returnInsertStatus(success/failure)
    Service --> Controller : returnInsertStatus(success/failure)
    Controller --> View : updateCartView(cartItems)
    View --> Student : displayUpdatedCart(cartItems)
end

alt Remove from Cart
    Student -> View : removeCourseFromCart(courseId)
    View -> Controller : removeCourseFromCart(courseId, studentId)
    Controller -> Service : removeCourseFromCart(courseId, studentId)
    Service -> Model : removeCourseFromCart(courseId, studentId)
    Model -> Database : deleteCartItem(courseId, studentId)
    Database --> Model : returnDeleteStatus(success/failure)
    Model --> Service : returnDeleteStatus(success/failure)
    Service --> Controller : returnDeleteStatus(success/failure)
    Controller --> View : updateCartView(cartItems)
    View --> Student : displayUpdatedCart(cartItems)
end

@enduml
