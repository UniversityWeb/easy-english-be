@startuml
title Học bài

actor Student
entity View
entity Controller
entity Service
entity Model
database Database

Student -> View : displayCoursesPage()
View -> Controller : requestPurchasedCourses(studentId)
Controller -> Service : getPurchasedCourses(studentId)
Service -> Model : fetchPurchasedCourses(studentId)
Model -> Database : queryPurchasedCourses(studentId)
Database --> Model : returnPurchasedCourses(purchasedCourses)
Model --> Service : returnPurchasedCourses(purchasedCourses)
Service --> Controller : returnPurchasedCourses(purchasedCourses)
Controller --> View : showPurchasedCourses(purchasedCourses)
View --> Student : displayPurchasedCourses(purchasedCourses)

alt Select a Course to Learn
    Student -> View : selectCourseToLearn(courseId)
    View -> Controller : requestCourseDetails(courseId)
    Controller -> Service : getCourseDetails(courseId)
    Service -> Model : fetchCourseDetails(courseId)
    Model -> Database : queryCourseDetails(courseId)
    Database --> Model : returnCourseDetails(courseDetails)
    Model --> Service : returnCourseDetails(courseDetails)
    Service --> Controller : returnCourseDetails(courseDetails)
    Controller --> View : showCourseContent(courseDetails)
    View --> Student : displayCourseContent(courseDetails)
end

alt Start Learning
    Student -> View : startLearning()
    View -> Controller : requestLearningProgress(courseId, studentId)
    Controller -> Service : getLearningProgress(courseId, studentId)
    Service -> Model : fetchLearningProgress(courseId, studentId)
    Model -> Database : queryLearningProgress(courseId, studentId)
    Database --> Model : returnLearningProgress(progressStatus)
    Model --> Service : returnLearningProgress(progressStatus)
    Service --> Controller : returnLearningProgress(progressStatus)
    Controller --> View : showLearningProgress(progressStatus)
    View --> Student : displayLearningProgress(progressStatus)

    Student -> View : continueLearning(lessonId)
    View -> Controller : requestLessonContent(lessonId)
    Controller -> Service : getLessonContent(lessonId)
    Service -> Model : fetchLessonContent(lessonId)
    Model -> Database : queryLessonContent(lessonId)
    Database --> Model : returnLessonContent(lessonContent)
    Model --> Service : returnLessonContent(lessonContent)
    Service --> Controller : returnLessonContent(lessonContent)
    Controller --> View : showLessonContent(lessonContent)
    View --> Student : displayLessonContent(lessonContent)
end

@enduml
